name: Deploy Production

# on:
#   release:
#     types: [released]
on:
  pull_request:
    branches:
      - main
      - "releases/**"

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    # environment: production
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/setup-python@v3
    - uses: aws-actions/setup-sam@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.SPLITSIES_DEPLOY_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.SPLITSIES_DEPLOY_SECRET_KEY_PROD }}
        aws-region: us-east-1

    - name: Create Common Parameter Overrides
      run: | 
        params=""
        params="Stage=production ${params}" 
        params="dbRegion=us-east-1 ${params}" 
        params="dbEndpoint=https://dynamodb.us-east-1.amazonaws.com/ ${params}" 
        params="ResourceAccountId=${{ secrets.PROD_ACCOUNT_ID }} ${params}"
        params="FirebaseApiKey=${{ secrets.FIREBASE_API_KEY_PRODUCTION }} ${params}" 
        params="FirebaseAuthDomain=${{ secrets.FIREBASE_AUTH_DOMAIN_PRODUCTION }} ${params}" 
        params="FirebaseProjectId=${{ secrets.FIREBASE_PROJECT_ID_PRODUCTION }} ${params}" 
        params="FirebaseStorageBucket=${{ secrets.FIREBASE_STORAGE_BUCKET_PRODUCTION }} ${params}" 
        params="FirebaseMessagingSenderId=${{ secrets.FIREBASE_MESSAGING_SENDER_ID_PRODUCTION }} ${params}" 
        params="FirebaseAppId=${{ secrets.FIREBASE_APP_ID_PRODUCTION }} ${params}" 
        params="FirebaseMeasurementId=${{ secrets.FIREBASE_MEASUREMENT_ID_PRODUCTION }} ${params}" 
        params="FirebaseAdminCreds=${{ secrets.FIREBASE_ADMIN_CREDS_PRODUCTION }} ${params}" 
        params="StagingAccountId=${{ secrets.STAGING_ACCOUNT_ID }} ${params}"
        params="OrganizationId=${{ secrets.AWS_ORGANIZATION_ID }} ${params}"
        echo $params > parameters.cfg


    - run: npm ci
      working-directory: ./api
    - run: sam build
      working-directory: ./api
    - name: Deploy to us-east-1
      run: |
        PARAMETERS=$(cat ../parameters.cfg)
        sam deploy --stack-name notification-service \
        --no-confirm-changeset \
        --no-fail-on-empty-changeset \
        --parameter-overrides $PARAMETERS "MessageQueueStreamArn=${{ secrets.MESSAGE_QUEUE_ARN_PRODUCTION }}"
      working-directory: ./api
      
    - name: Deploy to us-west-1
      run: |
        PARAMETERS=$(cat ../parameters.cfg)
        sam deploy --stack-name notification-service --region us-west-1 \
        --no-confirm-changeset \
        --no-fail-on-empty-changeset \
        --parameter-overrides $PARAMETERS "MessageQueueStreamArn=${{ secrets.MESSAGE_QUEUE_ARN_PRODUCTION_US_WEST_1 }}"
      working-directory: ./api

