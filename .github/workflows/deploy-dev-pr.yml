name: Deploy Dev PR

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - uses: actions/setup-python@v3
    - uses: aws-actions/setup-sam@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - run: sam build
    - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides "Stage=local,DbRegion=us-east-1,DbEndpoint=https://dynamodb.us-east-1.amazonaws.com/,DbTableName=Splitsies-UserDeviceToken-dev-pr,MessageQueueArn=${{ secrets.MESSAGE_QUEUE_ARN_DEV_PR }},FirebaseApiKey=${{ secrets.FIREBASE_API_KEY_DEV_PR }},FirebaseAuthDomain=${{ secrets.FIREBASE_AUTH_DOMAIN_DEV_PR }},FirebaseProjectId=${{ secrets.FIREBASE_PROJECT_ID_DEV_PR }},FirebaseStorageBucket=${{ secrets.FIREBASE_STORAGE_BUCKET_DEV_PR }},FirebaseMessagingSenderId=${{ secrets.FIREBASE_MESSAGING_SENDER_ID_DEV_PR }},FirebaseAppId=${{ secrets.FIREBASE_APP_ID_DEV_PR }},FirebaseMeasurementId=${{ secrets.FIREBASE_MEASUREMENT_ID_DEV_PR }},FirebaseAdminCreds=${{ secrets.FIREBASE_ADMIN_CREDS_DEV_PR }},DbAccessKeyId=${{ secrets.DB_ACCESS_KEY_ID }},DbSecretAccessKey=${{ secrets.DB_SECRET_ACCESS_KEY }}"
