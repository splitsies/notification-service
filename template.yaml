AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  notification-service

  SAM Template for notification-service

Parameters:
  FirebaseApiKey:
    Type: String
  FirebaseAuthDomain:
    Type: String
  FirebaseProjectId:
    Type: String
  FirebaseStorageBucket:
    Type: String
  FirebaseMessagingSenderId:
    Type: String
  FirebaseAppId:
    Type: String
  FirebaseMeasurementId:
    Type: String
  FirebaseAdminCreds:
    Type: String
  Stage:
    Type: String
  dbAccessKeyId:
    Type: String
  dbSecretAccessKey:
    Type: String
  dbRegion:
    Type: String
  dbEndpoint:
    Type: String
  dbTableName:
    Type: String
  MessageQueueStreamArn:
    Type: String
  messageQueueResourceName:
    Type: String
  JoinRequestNotificationQueue:
    Type: String
    Default: 39E552E9-0045-4210-9582-80E96553F95C


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30    
    MemorySize: 2048

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    # LoggingConfig:
    #   LogFormat: JSON

    Environment:
      Variables:
        FirebaseApiKey: !Ref FirebaseApiKey
        FirebaseAuthDomain: !Ref FirebaseAuthDomain
        FirebaseProjectId: !Ref FirebaseProjectId
        FirebaseStorageBucket: !Ref FirebaseStorageBucket
        FirebaseMessagingSenderId: !Ref FirebaseMessagingSenderId
        FirebaseAppId: !Ref FirebaseAppId
        FirebaseMeasurementId: !Ref FirebaseMeasurementId
        FirebaseAdminCreds: !Ref FirebaseAdminCreds
        Stage: !Ref Stage
        dbAccessKeyId: !Ref dbAccessKeyId
        dbSecretAccessKey: !Ref dbSecretAccessKey
        dbRegion: !Ref dbRegion
        dbEndpoint: !Ref dbEndpoint
        dbTableName: !Ref dbTableName
        TokenTtlDays: 270
        messageQueueResourceName: !Ref messageQueueResourceName

Resources:
  VerifyTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/functions/verify-token
      Handler: handler.main
      Runtime: nodejs18.x
    Metadata: # Manage esbuild properties
        BuildMethod: esbuild
        BuildProperties:
          Minify: true
          Target: es2020
          Sourcemap: true
          EntryPoints:
          - handler.ts
          External:
          - node_modules
          - aws-sdk
          - esbuild

  NotificationServiceApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${Stage}
      Auth:
        DefaultAuthorizer: TokenAuthorizer
        Authorizers:
          TokenAuthorizer:
            Function: !Ref VerifyTokenFunction

  NotifyJoinRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handler.main
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Events:
        Notify:
          Type: DynamoDB
          Properties:
            Stream: !Ref MessageQueueStreamArn
            MaximumRetryAttempts: 3
            MaximumRecordAgeInSeconds: 60
            StartingPosition: LATEST
            Enabled: true
            FilterCriteria:
              Filters:
                - Pattern: !Sub "{ \"eventName\": [\"INSERT\"], \"dynamodb\" : { \"Keys\" : { \"queueName\" : { \"S\" : [ \"${JoinRequestNotificationQueue}\" ] } } } }"
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - functions/notify-join-request/handler.ts
        External:
        - node_modules
        - aws-sdk

  UpdateDeviceTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handler.main
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Events:
        Notify:
          Type: Api
          Properties:
            Path: /v1/tokens/
            Method: put
            RestApiId: !Ref NotificationServiceApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - functions/update-token/handler.ts
        External:
        - node_modules
        - aws-sdk
  
  UserDeviceTokenTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Ref dbTableName
      AttributeDefinitions: 
        - AttributeName: userId
          AttributeType: S
        - AttributeName: deviceToken
          AttributeType: S
      KeySchema: 
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: deviceToken
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST


Outputs:
  NotifyJoinRequestFunction:
    Description: Notify Lambda Function ARN
    Value: !GetAtt NotifyJoinRequestFunction.Arn
  NotifyJoinRequestFunctionIamRole:
    Description: Implicit IAM Role created for Notify function
    Value: !GetAtt NotifyJoinRequestFunctionRole.Arn
  UpdateDeviceTokenFunction:
    Description: Notify Lambda Function ARN
    Value: !GetAtt UpdateDeviceTokenFunction.Arn
  UpdateDeviceTokenFunctionIamRole:
    Description: Implicit IAM Role created for Notify function
    Value: !GetAtt UpdateDeviceTokenFunctionRole.Arn
  UserDeviceTokenTable:
    Description: Table ARN
    Value: !GetAtt UserDeviceTokenTable.Arn
